autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

# load module for list-style selection
zmodload zsh/complist

HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE

setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances of the shell

setopt auto_cd # cd by typing directory name if it's not a command
setopt correct_all # autocorrect commands

setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match

zstyle ':completion:*' menu select # select completions with arrow keys
zstyle ':completion:*' group-name '' # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion

# Identify OS
platform='unknown'
unamestr=$(uname)
if [[ $unamestr == 'Linux' ]]; then
   platform='linux'
elif [[ $unamestr == 'Darwin' ]]; then
   platform='macos'
fi

export TERM=xterm-256color

export \
	LC_ALL=en_US.UTF-8 \
	LANG=en_US.UTF-8 \
	LANGUAGE=en_US.UTF-8 \
	EDITOR=vim \
  PATH=/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/local/bin:$PATH

source ~/.config/path_env.sh

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=9"

# Load plugins via antibody
source <(antibody init)
antibody bundle < ~/.zsh_plugins

# Initialize prompt system
autoload -U promptinit; promptinit
prompt pure

# Enable vim mode in zsh
bindkey -v

# Aliases
if [[ $platform == 'linux' ]]; then
  # Get os name
  osname=$(cat /etc/os-release | grep ^ID= | sed -e 's/ID=//')

  if [[ $osname == 'ubuntu' ]]; then
    alias find='fdfind'
  else
    alias find='fd'
  fi
elif [[ $platform == 'macos' ]]; then
  alias find='fd'
fi
alias ll='exa -l -g --icons'
alias lla='ll -a'
alias cat='bat --theme "Dracula"'
alias ping='prettyping --nolegend'
alias preview="fzf --preview 'bat --color always {}'"
alias top="htop"
alias du="ncdu --color dark -rr -x"
alias help='tldr'
alias afk="open -a /System/Library/CoreServices/ScreenSaverEngine.app"
eval $(thefuck --alias)

source ~/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.config/load_conda.sh

# Source fzf preferences
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Fix for Tilix, see https://gnunn1.github.io/tilix-web/manual/vteconfig/
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
        source /etc/profile.d/vte.sh
fi

# Compress PDF function using ghostscript
# https://superuser.com/questions/293856/reducing-pdf-file-size
compresspdf() {
    echo 'Usage: compresspdf [input file] [output file] [screen|ebook|printer|prepress]'
    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dPDFSETTINGS=/${3:-"screen"} -dCompatibilityLevel=1.4 -sOutputFile="$2" "$1"
}

# Load rbenv
eval "$(rbenv init -)"
